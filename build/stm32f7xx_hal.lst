ARM GAS  /tmp/cc5ih7xu.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32f7xx_hal.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.HAL_MspInit,"ax",%progbits
  19              		.align	1
  20              		.weak	HAL_MspInit
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	HAL_MspInit:
  26              	.LFB143:
  27              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @file    stm32f7xx_hal.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @attention
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * Copyright (c) 2017 STMicroelectronics.
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * All rights reserved.
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * This software is licensed under terms that can be found in the LICENSE file
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * in the root directory of this software component.
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   @verbatim
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ==============================================================================
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                      ##### How to use this driver #####
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ==============================================================================
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     The HAL contains two APIs' categories: 
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****          (+) Common HAL APIs
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****          (+) Services HAL APIs
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   @endverbatim
ARM GAS  /tmp/cc5ih7xu.s 			page 2


  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */ 
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #include "stm32f7xx_hal.h"
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup STM32F7xx_HAL_Driver
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL HAL
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief HAL module driver.
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private define ------------------------------------------------------------*/
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup HAL_Private_Constants
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  * @brief STM32F7xx HAL Driver version number V1.3.0
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_MAIN   (0x01) /*!< [31:24] main version */
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_SUB1   (0x03) /*!< [23:16] sub1 version */
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_SUB2   (0x00) /*!< [15:8]  sub2 version */
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_RC     (0x00) /*!< [7:0]  release candidate */ 
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION         ((__STM32F7xx_HAL_VERSION_MAIN << 24)\
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_SUB1 << 16)\
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_SUB2 << 8 )\
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_RC))
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define IDCODE_DEVID_MASK    ((uint32_t)0x00000FFF)
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Exported variables ---------------------------------------------------------*/
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup HAL_Exported_Variables
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __IO uint32_t uwTick;
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private functions ---------------------------------------------------------*/
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
ARM GAS  /tmp/cc5ih7xu.s 			page 3


  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *  @brief    Initialization and de-initialization functions
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @verbatim    
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****               ##### Initialization and Configuration functions #####
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]  This section provides functions allowing to:
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Initializes the Flash interface the NVIC allocation and initial clock 
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           configuration. It initializes the systick also when timeout is needed 
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           and the backup domain when enabled.
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) De-Initializes common part of the HAL.
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Configure the time base source to have 1ms time base with a dedicated 
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           Tick interrupt priority. 
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              handled in milliseconds basis.
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             ISR process will be blocked. 
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak  
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @endverbatim
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first 
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         HAL function), it performs the following:
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Configure the Flash prefetch, and instruction cache through ART accelerator.
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Set NVIC Group Priority to 4.
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file 
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           "stm32f7xx_hal_msp.c" to do the global low level hardware initialization 
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *            
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         to have correct HAL operation.
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Instruction cache through ART accelerator */ 
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if (ART_ACCELERATOR_ENABLE != 0)
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_FLASH_ART_ENABLE();
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #endif /* ART_ACCELERATOR_ENABLE */
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Flash prefetch */
ARM GAS  /tmp/cc5ih7xu.s 			page 4


 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if (PREFETCH_ENABLE != 0U)
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #endif /* PREFETCH_ENABLE */
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Set Interrupt Group Priority */
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Init the low level hardware */
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_MspInit();
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         This function is optional.   
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Reset of all peripherals */
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_FORCE_RESET();
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_FORCE_RESET();
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_FORCE_RESET();
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* De-Init the low level hardware */
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_MspDeInit();
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Initialize the MSP.
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_MspInit(void)
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
  28              		.loc 1 198 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc5ih7xu.s 			page 5


  32              		@ link register save eliminated.
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
  33              		.loc 1 202 1 view .LVU1
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE143:
  38              		.section	.text.HAL_MspDeInit,"ax",%progbits
  39              		.align	1
  40              		.weak	HAL_MspDeInit
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  45              	HAL_MspDeInit:
  46              	.LFB144:
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  DeInitializes the MSP.
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_MspDeInit(void)
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
  47              		.loc 1 209 1 view -0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */ 
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
  52              		.loc 1 213 1 view .LVU3
  53 0000 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE144:
  57              		.section	.text.HAL_DeInit,"ax",%progbits
  58              		.align	1
  59              		.global	HAL_DeInit
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  64              	HAL_DeInit:
  65              	.LFB142:
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Reset of all peripherals */
  66              		.loc 1 169 1 view -0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70 0000 10B5     		push	{r4, lr}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 4, -8
  74              		.cfi_offset 14, -4
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  75              		.loc 1 171 3 view .LVU5
ARM GAS  /tmp/cc5ih7xu.s 			page 6


  76 0002 094B     		ldr	r3, .L5
  77 0004 4FF0FF32 		mov	r2, #-1
  78 0008 1A62     		str	r2, [r3, #32]
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  79              		.loc 1 172 3 view .LVU6
  80 000a 0024     		movs	r4, #0
  81 000c 1C62     		str	r4, [r3, #32]
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  82              		.loc 1 174 3 view .LVU7
  83 000e 5A62     		str	r2, [r3, #36]
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  84              		.loc 1 175 3 view .LVU8
  85 0010 5C62     		str	r4, [r3, #36]
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
  86              		.loc 1 177 3 view .LVU9
  87 0012 1A61     		str	r2, [r3, #16]
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  88              		.loc 1 178 3 view .LVU10
  89 0014 1C61     		str	r4, [r3, #16]
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
  90              		.loc 1 180 3 view .LVU11
  91 0016 5A61     		str	r2, [r3, #20]
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  92              		.loc 1 181 3 view .LVU12
  93 0018 5C61     		str	r4, [r3, #20]
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
  94              		.loc 1 183 3 view .LVU13
  95 001a 9A61     		str	r2, [r3, #24]
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  96              		.loc 1 184 3 view .LVU14
  97 001c 9C61     		str	r4, [r3, #24]
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  98              		.loc 1 187 3 view .LVU15
  99 001e FFF7FEFF 		bl	HAL_MspDeInit
 100              	.LVL0:
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 101              		.loc 1 190 3 view .LVU16
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 102              		.loc 1 191 1 is_stmt 0 view .LVU17
 103 0022 2046     		mov	r0, r4
 104 0024 10BD     		pop	{r4, pc}
 105              	.L6:
 106 0026 00BF     		.align	2
 107              	.L5:
 108 0028 00380240 		.word	1073887232
 109              		.cfi_endproc
 110              	.LFE142:
 112              		.section	.text.HAL_InitTick,"ax",%progbits
 113              		.align	1
 114              		.weak	HAL_InitTick
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	HAL_InitTick:
 120              	.LVL1:
 121              	.LFB145:
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
ARM GAS  /tmp/cc5ih7xu.s 			page 7


 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function configures the source of the time base.
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        Tick interrupt priority.
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementation  in user file.
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 122              		.loc 1 232 1 is_stmt 1 view -0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		.loc 1 232 1 is_stmt 0 view .LVU19
 127 0000 10B5     		push	{r4, lr}
 128              	.LCFI1:
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 4, -8
 131              		.cfi_offset 14, -4
 132 0002 0446     		mov	r4, r0
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 133              		.loc 1 234 3 is_stmt 1 view .LVU20
 134              		.loc 1 234 51 is_stmt 0 view .LVU21
 135 0004 0E4B     		ldr	r3, .L13
 136 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 137 0008 4FF47A73 		mov	r3, #1000
 138 000c B3FBF2F3 		udiv	r3, r3, r2
 139              		.loc 1 234 7 view .LVU22
 140 0010 0C4A     		ldr	r2, .L13+4
 141 0012 1068     		ldr	r0, [r2]
 142              	.LVL2:
 143              		.loc 1 234 7 view .LVU23
 144 0014 B0FBF3F0 		udiv	r0, r0, r3
 145 0018 FFF7FEFF 		bl	HAL_SYSTICK_Config
 146              	.LVL3:
 147              		.loc 1 234 6 view .LVU24
 148 001c 68B9     		cbnz	r0, .L9
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     return HAL_ERROR;
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure the SysTick IRQ priority */
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 149              		.loc 1 240 3 is_stmt 1 view .LVU25
 150              		.loc 1 240 6 is_stmt 0 view .LVU26
 151 001e 0F2C     		cmp	r4, #15
 152 0020 01D9     		bls	.L12
ARM GAS  /tmp/cc5ih7xu.s 			page 8


 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickPrio = TickPriority;
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   else
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     return HAL_ERROR;
 153              		.loc 1 247 12 view .LVU27
 154 0022 0120     		movs	r0, #1
 155 0024 0AE0     		b	.L8
 156              	.L12:
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickPrio = TickPriority;
 157              		.loc 1 242 5 is_stmt 1 view .LVU28
 158 0026 0022     		movs	r2, #0
 159 0028 2146     		mov	r1, r4
 160 002a 4FF0FF30 		mov	r0, #-1
 161 002e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 162              	.LVL4:
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 163              		.loc 1 243 5 view .LVU29
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 164              		.loc 1 243 16 is_stmt 0 view .LVU30
 165 0032 054B     		ldr	r3, .L13+8
 166 0034 1C60     		str	r4, [r3]
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 167              		.loc 1 251 3 is_stmt 1 view .LVU31
 168              		.loc 1 251 10 is_stmt 0 view .LVU32
 169 0036 0020     		movs	r0, #0
 170 0038 00E0     		b	.L8
 171              	.L9:
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 172              		.loc 1 236 12 view .LVU33
 173 003a 0120     		movs	r0, #1
 174              	.L8:
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 175              		.loc 1 252 1 view .LVU34
 176 003c 10BD     		pop	{r4, pc}
 177              	.LVL5:
 178              	.L14:
 179              		.loc 1 252 1 view .LVU35
 180 003e 00BF     		.align	2
 181              	.L13:
 182 0040 00000000 		.word	.LANCHOR0
 183 0044 00000000 		.word	SystemCoreClock
 184 0048 00000000 		.word	.LANCHOR1
 185              		.cfi_endproc
 186              	.LFE145:
 188              		.section	.text.HAL_Init,"ax",%progbits
 189              		.align	1
 190              		.global	HAL_Init
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 195              	HAL_Init:
ARM GAS  /tmp/cc5ih7xu.s 			page 9


 196              	.LFB141:
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Instruction cache through ART accelerator */ 
 197              		.loc 1 139 1 is_stmt 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201 0000 08B5     		push	{r3, lr}
 202              	.LCFI2:
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 3, -8
 205              		.cfi_offset 14, -4
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 206              		.loc 1 151 3 view .LVU37
 207 0002 0320     		movs	r0, #3
 208 0004 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 209              	.LVL6:
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 210              		.loc 1 154 3 view .LVU38
 211 0008 0F20     		movs	r0, #15
 212 000a FFF7FEFF 		bl	HAL_InitTick
 213              	.LVL7:
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 214              		.loc 1 157 3 view .LVU39
 215 000e FFF7FEFF 		bl	HAL_MspInit
 216              	.LVL8:
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 217              		.loc 1 160 3 view .LVU40
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 218              		.loc 1 161 1 is_stmt 0 view .LVU41
 219 0012 0020     		movs	r0, #0
 220 0014 08BD     		pop	{r3, pc}
 221              		.cfi_endproc
 222              	.LFE141:
 224              		.section	.text.HAL_IncTick,"ax",%progbits
 225              		.align	1
 226              		.weak	HAL_IncTick
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
 231              	HAL_IncTick:
 232              	.LFB146:
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *  @brief    HAL Control functions
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @verbatim
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                       ##### HAL Control functions #####
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]  This section provides functions allowing to:
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Provide a tick value in millisecond
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Provide a blocking delay in millisecond
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Suspend the time base source interrupt
ARM GAS  /tmp/cc5ih7xu.s 			page 10


 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Resume the time base source interrupt
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the HAL API driver version
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the device identifier
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the device revision identifier
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @endverbatim
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        used as application time base.
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       in SysTick ISR.
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other 
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      implementations in user file.
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_IncTick(void)
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 233              		.loc 1 291 1 is_stmt 1 view -0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uwTick += uwTickFreq;
 238              		.loc 1 292 3 view .LVU43
 239              		.loc 1 292 10 is_stmt 0 view .LVU44
 240 0000 034A     		ldr	r2, .L18
 241 0002 1168     		ldr	r1, [r2]
 242 0004 034B     		ldr	r3, .L18+4
 243 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 244 0008 0B44     		add	r3, r3, r1
 245 000a 1360     		str	r3, [r2]
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 246              		.loc 1 293 1 view .LVU45
 247 000c 7047     		bx	lr
 248              	.L19:
 249 000e 00BF     		.align	2
 250              	.L18:
 251 0010 00000000 		.word	.LANCHOR2
 252 0014 00000000 		.word	.LANCHOR0
 253              		.cfi_endproc
 254              	.LFE146:
 256              		.section	.text.HAL_GetTick,"ax",%progbits
 257              		.align	1
 258              		.weak	HAL_GetTick
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 263              	HAL_GetTick:
 264              	.LFB147:
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
ARM GAS  /tmp/cc5ih7xu.s 			page 11


 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Provides a tick value in millisecond.
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick value
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 265              		.loc 1 302 1 is_stmt 1 view -0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		@ link register save eliminated.
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTick;
 270              		.loc 1 303 3 view .LVU47
 271              		.loc 1 303 10 is_stmt 0 view .LVU48
 272 0000 014B     		ldr	r3, .L21
 273 0002 1868     		ldr	r0, [r3]
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 274              		.loc 1 304 1 view .LVU49
 275 0004 7047     		bx	lr
 276              	.L22:
 277 0006 00BF     		.align	2
 278              	.L21:
 279 0008 00000000 		.word	.LANCHOR2
 280              		.cfi_endproc
 281              	.LFE147:
 283              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 284              		.align	1
 285              		.global	HAL_GetTickPrio
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 290              	HAL_GetTickPrio:
 291              	.LFB148:
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function returns a tick priority.
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick priority
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 292              		.loc 1 311 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTickPrio;
 297              		.loc 1 312 3 view .LVU51
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 298              		.loc 1 313 1 is_stmt 0 view .LVU52
 299 0000 014B     		ldr	r3, .L24
 300 0002 1868     		ldr	r0, [r3]
 301 0004 7047     		bx	lr
 302              	.L25:
 303 0006 00BF     		.align	2
 304              	.L24:
 305 0008 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/cc5ih7xu.s 			page 12


 306              		.cfi_endproc
 307              	.LFE148:
 309              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 310              		.align	1
 311              		.global	HAL_SetTickFreq
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 316              	HAL_SetTickFreq:
 317              	.LVL9:
 318              	.LFB149:
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Set new tick Freq.
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Status
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 319              		.loc 1 320 1 is_stmt 1 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              		.loc 1 320 1 is_stmt 0 view .LVU54
 324 0000 10B5     		push	{r4, lr}
 325              	.LCFI3:
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 4, -8
 328              		.cfi_offset 14, -4
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 329              		.loc 1 321 3 is_stmt 1 view .LVU55
 330              	.LVL10:
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 331              		.loc 1 322 3 view .LVU56
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 332              		.loc 1 324 3 view .LVU57
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (uwTickFreq != Freq)
 333              		.loc 1 326 3 view .LVU58
 334              		.loc 1 326 18 is_stmt 0 view .LVU59
 335 0002 084B     		ldr	r3, .L31
 336 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 337              		.loc 1 326 6 view .LVU60
 338 0006 8442     		cmp	r4, r0
 339 0008 01D1     		bne	.L30
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 340              		.loc 1 321 21 view .LVU61
 341 000a 0020     		movs	r0, #0
 342              	.LVL11:
 343              	.L27:
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     /* Back up uwTickFreq frequency */
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     prevTickFreq = uwTickFreq;
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickFreq = Freq;
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
ARM GAS  /tmp/cc5ih7xu.s 			page 13


 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     /* Apply the new tick Freq  */
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     if (status != HAL_OK)
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     {
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       /* Restore previous tick frequency */
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       uwTickFreq = prevTickFreq;
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     }
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return status;
 344              		.loc 1 344 3 is_stmt 1 view .LVU62
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 345              		.loc 1 345 1 is_stmt 0 view .LVU63
 346 000c 10BD     		pop	{r4, pc}
 347              	.LVL12:
 348              	.L30:
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 349              		.loc 1 329 5 is_stmt 1 view .LVU64
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 350              		.loc 1 332 5 view .LVU65
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 351              		.loc 1 332 16 is_stmt 0 view .LVU66
 352 000e 1870     		strb	r0, [r3]
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 353              		.loc 1 335 5 is_stmt 1 view .LVU67
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 354              		.loc 1 335 14 is_stmt 0 view .LVU68
 355 0010 054B     		ldr	r3, .L31+4
 356 0012 1868     		ldr	r0, [r3]
 357              	.LVL13:
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 358              		.loc 1 335 14 view .LVU69
 359 0014 FFF7FEFF 		bl	HAL_InitTick
 360              	.LVL14:
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     {
 361              		.loc 1 337 5 is_stmt 1 view .LVU70
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     {
 362              		.loc 1 337 8 is_stmt 0 view .LVU71
 363 0018 0028     		cmp	r0, #0
 364 001a F7D0     		beq	.L27
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     }
 365              		.loc 1 340 7 is_stmt 1 view .LVU72
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     }
 366              		.loc 1 340 18 is_stmt 0 view .LVU73
 367 001c 014B     		ldr	r3, .L31
 368 001e 1C70     		strb	r4, [r3]
 369 0020 F4E7     		b	.L27
 370              	.L32:
 371 0022 00BF     		.align	2
 372              	.L31:
 373 0024 00000000 		.word	.LANCHOR0
 374 0028 00000000 		.word	.LANCHOR1
 375              		.cfi_endproc
 376              	.LFE149:
 378              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 379              		.align	1
ARM GAS  /tmp/cc5ih7xu.s 			page 14


 380              		.global	HAL_GetTickFreq
 381              		.syntax unified
 382              		.thumb
 383              		.thumb_func
 385              	HAL_GetTickFreq:
 386              	.LFB150:
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Return tick frequency.
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick period in Hz
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 387              		.loc 1 352 1 is_stmt 1 view -0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTickFreq;
 392              		.loc 1 353 3 view .LVU75
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 393              		.loc 1 354 1 is_stmt 0 view .LVU76
 394 0000 014B     		ldr	r3, .L34
 395 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 396 0004 7047     		bx	lr
 397              	.L35:
 398 0006 00BF     		.align	2
 399              	.L34:
 400 0008 00000000 		.word	.LANCHOR0
 401              		.cfi_endproc
 402              	.LFE150:
 404              		.section	.text.HAL_Delay,"ax",%progbits
 405              		.align	1
 406              		.weak	HAL_Delay
 407              		.syntax unified
 408              		.thumb
 409              		.thumb_func
 411              	HAL_Delay:
 412              	.LVL15:
 413              	.LFB151:
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        on variable incremented.
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is incremented.
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @param Delay  specifies the delay time length, in milliseconds.
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 414              		.loc 1 368 1 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc5ih7xu.s 			page 15


 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		.loc 1 368 1 is_stmt 0 view .LVU78
 419 0000 38B5     		push	{r3, r4, r5, lr}
 420              	.LCFI4:
 421              		.cfi_def_cfa_offset 16
 422              		.cfi_offset 3, -16
 423              		.cfi_offset 4, -12
 424              		.cfi_offset 5, -8
 425              		.cfi_offset 14, -4
 426 0002 0446     		mov	r4, r0
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 427              		.loc 1 369 3 is_stmt 1 view .LVU79
 428              		.loc 1 369 24 is_stmt 0 view .LVU80
 429 0004 FFF7FEFF 		bl	HAL_GetTick
 430              	.LVL16:
 431              		.loc 1 369 24 view .LVU81
 432 0008 0546     		mov	r5, r0
 433              	.LVL17:
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uint32_t wait = Delay;
 434              		.loc 1 370 3 is_stmt 1 view .LVU82
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 435              		.loc 1 373 3 view .LVU83
 436              		.loc 1 373 6 is_stmt 0 view .LVU84
 437 000a B4F1FF3F 		cmp	r4, #-1
 438 000e 02D0     		beq	.L38
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 439              		.loc 1 375 5 is_stmt 1 view .LVU85
 440              		.loc 1 375 13 is_stmt 0 view .LVU86
 441 0010 044B     		ldr	r3, .L40
 442 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 443              		.loc 1 375 10 view .LVU87
 444 0014 1C44     		add	r4, r4, r3
 445              	.LVL18:
 446              	.L38:
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 447              		.loc 1 380 3 is_stmt 1 discriminator 1 view .LVU88
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 448              		.loc 1 378 38 discriminator 1 view .LVU89
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 449              		.loc 1 378 11 is_stmt 0 discriminator 1 view .LVU90
 450 0016 FFF7FEFF 		bl	HAL_GetTick
 451              	.LVL19:
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 452              		.loc 1 378 25 discriminator 1 view .LVU91
 453 001a 401B     		subs	r0, r0, r5
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 454              		.loc 1 378 38 discriminator 1 view .LVU92
 455 001c A042     		cmp	r0, r4
 456 001e FAD3     		bcc	.L38
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
ARM GAS  /tmp/cc5ih7xu.s 			page 16


 457              		.loc 1 381 1 view .LVU93
 458 0020 38BD     		pop	{r3, r4, r5, pc}
 459              	.LVL20:
 460              	.L41:
 461              		.loc 1 381 1 view .LVU94
 462 0022 00BF     		.align	2
 463              	.L40:
 464 0024 00000000 		.word	.LANCHOR0
 465              		.cfi_endproc
 466              	.LFE151:
 468              		.section	.text.HAL_SuspendTick,"ax",%progbits
 469              		.align	1
 470              		.weak	HAL_SuspendTick
 471              		.syntax unified
 472              		.thumb
 473              		.thumb_func
 475              	HAL_SuspendTick:
 476              	.LFB152:
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Suspend Tick increment.
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment 
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is suspended.
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_SuspendTick(void)
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 477              		.loc 1 394 1 is_stmt 1 view -0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              		@ link register save eliminated.
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Disable SysTick Interrupt */
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 482              		.loc 1 396 3 view .LVU96
 483              		.loc 1 396 17 is_stmt 0 view .LVU97
 484 0000 4FF0E022 		mov	r2, #-536813568
 485 0004 1369     		ldr	r3, [r2, #16]
 486 0006 23F00203 		bic	r3, r3, #2
 487 000a 1361     		str	r3, [r2, #16]
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 488              		.loc 1 397 1 view .LVU98
 489 000c 7047     		bx	lr
 490              		.cfi_endproc
 491              	.LFE152:
 493              		.section	.text.HAL_ResumeTick,"ax",%progbits
 494              		.align	1
 495              		.weak	HAL_ResumeTick
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 500              	HAL_ResumeTick:
 501              	.LFB153:
ARM GAS  /tmp/cc5ih7xu.s 			page 17


 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Resume Tick increment.
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment 
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is resumed.
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_ResumeTick(void)
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 502              		.loc 1 410 1 is_stmt 1 view -0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506              		@ link register save eliminated.
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Enable SysTick Interrupt */
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 507              		.loc 1 412 3 view .LVU100
 508              		.loc 1 412 18 is_stmt 0 view .LVU101
 509 0000 4FF0E022 		mov	r2, #-536813568
 510 0004 1369     		ldr	r3, [r2, #16]
 511 0006 43F00203 		orr	r3, r3, #2
 512 000a 1361     		str	r3, [r2, #16]
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 513              		.loc 1 413 1 view .LVU102
 514 000c 7047     		bx	lr
 515              		.cfi_endproc
 516              	.LFE153:
 518              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 519              		.align	1
 520              		.global	HAL_GetHalVersion
 521              		.syntax unified
 522              		.thumb
 523              		.thumb_func
 525              	HAL_GetHalVersion:
 526              	.LFB154:
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the HAL revision
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 527              		.loc 1 420 1 is_stmt 1 view -0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531              		@ link register save eliminated.
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return __STM32F7xx_HAL_VERSION;
 532              		.loc 1 421 3 view .LVU104
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 533              		.loc 1 422 1 is_stmt 0 view .LVU105
 534 0000 0048     		ldr	r0, .L45
 535 0002 7047     		bx	lr
ARM GAS  /tmp/cc5ih7xu.s 			page 18


 536              	.L46:
 537              		.align	2
 538              	.L45:
 539 0004 00000301 		.word	16973824
 540              		.cfi_endproc
 541              	.LFE154:
 543              		.section	.text.HAL_GetREVID,"ax",%progbits
 544              		.align	1
 545              		.global	HAL_GetREVID
 546              		.syntax unified
 547              		.thumb
 548              		.thumb_func
 550              	HAL_GetREVID:
 551              	.LFB155:
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the device revision identifier.
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device revision identifier
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetREVID(void)
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 552              		.loc 1 429 1 is_stmt 1 view -0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return((DBGMCU->IDCODE) >> 16U);
 557              		.loc 1 430 4 view .LVU107
 558              		.loc 1 430 18 is_stmt 0 view .LVU108
 559 0000 014B     		ldr	r3, .L48
 560 0002 1868     		ldr	r0, [r3]
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 561              		.loc 1 431 1 view .LVU109
 562 0004 000C     		lsrs	r0, r0, #16
 563 0006 7047     		bx	lr
 564              	.L49:
 565              		.align	2
 566              	.L48:
 567 0008 002004E0 		.word	-536600576
 568              		.cfi_endproc
 569              	.LFE155:
 571              		.section	.text.HAL_GetDEVID,"ax",%progbits
 572              		.align	1
 573              		.global	HAL_GetDEVID
 574              		.syntax unified
 575              		.thumb
 576              		.thumb_func
 578              	HAL_GetDEVID:
 579              	.LFB156:
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the device identifier.
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetDEVID(void)
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 580              		.loc 1 438 1 is_stmt 1 view -0
ARM GAS  /tmp/cc5ih7xu.s 			page 19


 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              		@ link register save eliminated.
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 585              		.loc 1 439 4 view .LVU111
 586              		.loc 1 439 18 is_stmt 0 view .LVU112
 587 0000 024B     		ldr	r3, .L51
 588 0002 1868     		ldr	r0, [r3]
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 589              		.loc 1 440 1 view .LVU113
 590 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 591 0008 7047     		bx	lr
 592              	.L52:
 593 000a 00BF     		.align	2
 594              	.L51:
 595 000c 002004E0 		.word	-536600576
 596              		.cfi_endproc
 597              	.LFE156:
 599              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 600              		.align	1
 601              		.global	HAL_GetUIDw0
 602              		.syntax unified
 603              		.thumb
 604              		.thumb_func
 606              	HAL_GetUIDw0:
 607              	.LFB157:
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 608              		.loc 1 447 1 is_stmt 1 view -0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              		@ link register save eliminated.
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return(READ_REG(*((uint32_t *)UID_BASE)));
 613              		.loc 1 448 3 view .LVU115
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 614              		.loc 1 449 1 is_stmt 0 view .LVU116
 615 0000 014B     		ldr	r3, .L54
 616 0002 D3F82004 		ldr	r0, [r3, #1056]
 617 0006 7047     		bx	lr
 618              	.L55:
 619              		.align	2
 620              	.L54:
 621 0008 00F0F01F 		.word	535883776
 622              		.cfi_endproc
 623              	.LFE157:
 625              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 626              		.align	1
 627              		.global	HAL_GetUIDw1
 628              		.syntax unified
 629              		.thumb
ARM GAS  /tmp/cc5ih7xu.s 			page 20


 630              		.thumb_func
 632              	HAL_GetUIDw1:
 633              	.LFB158:
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 634              		.loc 1 456 1 is_stmt 1 view -0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638              		@ link register save eliminated.
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 639              		.loc 1 457 3 view .LVU118
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 640              		.loc 1 458 1 is_stmt 0 view .LVU119
 641 0000 014B     		ldr	r3, .L57
 642 0002 D3F82404 		ldr	r0, [r3, #1060]
 643 0006 7047     		bx	lr
 644              	.L58:
 645              		.align	2
 646              	.L57:
 647 0008 00F0F01F 		.word	535883776
 648              		.cfi_endproc
 649              	.LFE158:
 651              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 652              		.align	1
 653              		.global	HAL_GetUIDw2
 654              		.syntax unified
 655              		.thumb
 656              		.thumb_func
 658              	HAL_GetUIDw2:
 659              	.LFB159:
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 660              		.loc 1 465 1 is_stmt 1 view -0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 664              		@ link register save eliminated.
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 665              		.loc 1 466 3 view .LVU121
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 666              		.loc 1 467 1 is_stmt 0 view .LVU122
 667 0000 014B     		ldr	r3, .L60
 668 0002 D3F82804 		ldr	r0, [r3, #1064]
 669 0006 7047     		bx	lr
 670              	.L61:
 671              		.align	2
ARM GAS  /tmp/cc5ih7xu.s 			page 21


 672              	.L60:
 673 0008 00F0F01F 		.word	535883776
 674              		.cfi_endproc
 675              	.LFE159:
 677              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 678              		.align	1
 679              		.global	HAL_DBGMCU_EnableDBGSleepMode
 680              		.syntax unified
 681              		.thumb
 682              		.thumb_func
 684              	HAL_DBGMCU_EnableDBGSleepMode:
 685              	.LFB160:
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 686              		.loc 1 474 1 is_stmt 1 view -0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 0
 689              		@ frame_needed = 0, uses_anonymous_args = 0
 690              		@ link register save eliminated.
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 691              		.loc 1 475 3 view .LVU124
 692 0000 024A     		ldr	r2, .L63
 693 0002 5368     		ldr	r3, [r2, #4]
 694 0004 43F00103 		orr	r3, r3, #1
 695 0008 5360     		str	r3, [r2, #4]
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 696              		.loc 1 476 1 is_stmt 0 view .LVU125
 697 000a 7047     		bx	lr
 698              	.L64:
 699              		.align	2
 700              	.L63:
 701 000c 002004E0 		.word	-536600576
 702              		.cfi_endproc
 703              	.LFE160:
 705              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 706              		.align	1
 707              		.global	HAL_DBGMCU_DisableDBGSleepMode
 708              		.syntax unified
 709              		.thumb
 710              		.thumb_func
 712              	HAL_DBGMCU_DisableDBGSleepMode:
 713              	.LFB161:
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 714              		.loc 1 483 1 is_stmt 1 view -0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc5ih7xu.s 			page 22


 717              		@ frame_needed = 0, uses_anonymous_args = 0
 718              		@ link register save eliminated.
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 719              		.loc 1 484 3 view .LVU127
 720 0000 024A     		ldr	r2, .L66
 721 0002 5368     		ldr	r3, [r2, #4]
 722 0004 23F00103 		bic	r3, r3, #1
 723 0008 5360     		str	r3, [r2, #4]
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 724              		.loc 1 485 1 is_stmt 0 view .LVU128
 725 000a 7047     		bx	lr
 726              	.L67:
 727              		.align	2
 728              	.L66:
 729 000c 002004E0 		.word	-536600576
 730              		.cfi_endproc
 731              	.LFE161:
 733              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 734              		.align	1
 735              		.global	HAL_DBGMCU_EnableDBGStopMode
 736              		.syntax unified
 737              		.thumb
 738              		.thumb_func
 740              	HAL_DBGMCU_EnableDBGStopMode:
 741              	.LFB162:
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 742              		.loc 1 492 1 is_stmt 1 view -0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              		@ link register save eliminated.
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 747              		.loc 1 493 3 view .LVU130
 748 0000 024A     		ldr	r2, .L69
 749 0002 5368     		ldr	r3, [r2, #4]
 750 0004 43F00203 		orr	r3, r3, #2
 751 0008 5360     		str	r3, [r2, #4]
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 752              		.loc 1 494 1 is_stmt 0 view .LVU131
 753 000a 7047     		bx	lr
 754              	.L70:
 755              		.align	2
 756              	.L69:
 757 000c 002004E0 		.word	-536600576
 758              		.cfi_endproc
 759              	.LFE162:
 761              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 762              		.align	1
 763              		.global	HAL_DBGMCU_DisableDBGStopMode
 764              		.syntax unified
 765              		.thumb
ARM GAS  /tmp/cc5ih7xu.s 			page 23


 766              		.thumb_func
 768              	HAL_DBGMCU_DisableDBGStopMode:
 769              	.LFB163:
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 770              		.loc 1 501 1 is_stmt 1 view -0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              		@ link register save eliminated.
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 775              		.loc 1 502 3 view .LVU133
 776 0000 024A     		ldr	r2, .L72
 777 0002 5368     		ldr	r3, [r2, #4]
 778 0004 23F00203 		bic	r3, r3, #2
 779 0008 5360     		str	r3, [r2, #4]
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 780              		.loc 1 503 1 is_stmt 0 view .LVU134
 781 000a 7047     		bx	lr
 782              	.L73:
 783              		.align	2
 784              	.L72:
 785 000c 002004E0 		.word	-536600576
 786              		.cfi_endproc
 787              	.LFE163:
 789              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 790              		.align	1
 791              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 796              	HAL_DBGMCU_EnableDBGStandbyMode:
 797              	.LFB164:
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 798              		.loc 1 510 1 is_stmt 1 view -0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802              		@ link register save eliminated.
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 803              		.loc 1 511 3 view .LVU136
 804 0000 024A     		ldr	r2, .L75
 805 0002 5368     		ldr	r3, [r2, #4]
 806 0004 43F00403 		orr	r3, r3, #4
 807 0008 5360     		str	r3, [r2, #4]
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
ARM GAS  /tmp/cc5ih7xu.s 			page 24


 808              		.loc 1 512 1 is_stmt 0 view .LVU137
 809 000a 7047     		bx	lr
 810              	.L76:
 811              		.align	2
 812              	.L75:
 813 000c 002004E0 		.word	-536600576
 814              		.cfi_endproc
 815              	.LFE164:
 817              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 818              		.align	1
 819              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 820              		.syntax unified
 821              		.thumb
 822              		.thumb_func
 824              	HAL_DBGMCU_DisableDBGStandbyMode:
 825              	.LFB165:
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 826              		.loc 1 519 1 is_stmt 1 view -0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 0
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 830              		@ link register save eliminated.
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 831              		.loc 1 520 3 view .LVU139
 832 0000 024A     		ldr	r2, .L78
 833 0002 5368     		ldr	r3, [r2, #4]
 834 0004 23F00403 		bic	r3, r3, #4
 835 0008 5360     		str	r3, [r2, #4]
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 836              		.loc 1 521 1 is_stmt 0 view .LVU140
 837 000a 7047     		bx	lr
 838              	.L79:
 839              		.align	2
 840              	.L78:
 841 000c 002004E0 		.word	-536600576
 842              		.cfi_endproc
 843              	.LFE165:
 845              		.section	.text.HAL_EnableCompensationCell,"ax",%progbits
 846              		.align	1
 847              		.global	HAL_EnableCompensationCell
 848              		.syntax unified
 849              		.thumb
 850              		.thumb_func
 852              	HAL_EnableCompensationCell:
 853              	.LFB166:
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enables the I/O Compensation Cell.
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
ARM GAS  /tmp/cc5ih7xu.s 			page 25


 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableCompensationCell(void)
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 854              		.loc 1 530 1 is_stmt 1 view -0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 0
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 858              		@ link register save eliminated.
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->CMPCR |= SYSCFG_CMPCR_CMP_PD;
 859              		.loc 1 531 3 view .LVU142
 860              		.loc 1 531 17 is_stmt 0 view .LVU143
 861 0000 024A     		ldr	r2, .L81
 862 0002 136A     		ldr	r3, [r2, #32]
 863 0004 43F00103 		orr	r3, r3, #1
 864 0008 1362     		str	r3, [r2, #32]
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 865              		.loc 1 532 1 view .LVU144
 866 000a 7047     		bx	lr
 867              	.L82:
 868              		.align	2
 869              	.L81:
 870 000c 00380140 		.word	1073821696
 871              		.cfi_endproc
 872              	.LFE166:
 874              		.section	.text.HAL_DisableCompensationCell,"ax",%progbits
 875              		.align	1
 876              		.global	HAL_DisableCompensationCell
 877              		.syntax unified
 878              		.thumb
 879              		.thumb_func
 881              	HAL_DisableCompensationCell:
 882              	.LFB167:
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Power-down the I/O Compensation Cell.
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableCompensationCell(void)
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 883              		.loc 1 541 1 is_stmt 1 view -0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 0
 886              		@ frame_needed = 0, uses_anonymous_args = 0
 887              		@ link register save eliminated.
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->CMPCR &= (uint32_t)~((uint32_t)SYSCFG_CMPCR_CMP_PD);
 888              		.loc 1 542 3 view .LVU146
 889              		.loc 1 542 17 is_stmt 0 view .LVU147
 890 0000 024A     		ldr	r2, .L84
 891 0002 136A     		ldr	r3, [r2, #32]
 892 0004 23F00103 		bic	r3, r3, #1
 893 0008 1362     		str	r3, [r2, #32]
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 894              		.loc 1 543 1 view .LVU148
 895 000a 7047     		bx	lr
 896              	.L85:
ARM GAS  /tmp/cc5ih7xu.s 			page 26


 897              		.align	2
 898              	.L84:
 899 000c 00380140 		.word	1073821696
 900              		.cfi_endproc
 901              	.LFE167:
 903              		.section	.text.HAL_EnableFMCMemorySwapping,"ax",%progbits
 904              		.align	1
 905              		.global	HAL_EnableFMCMemorySwapping
 906              		.syntax unified
 907              		.thumb
 908              		.thumb_func
 910              	HAL_EnableFMCMemorySwapping:
 911              	.LFB168:
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enables the FMC Memory Mapping Swapping.
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SDRAM is accessible at 0x60000000 
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         and NOR/RAM is accessible at 0xC0000000   
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableFMCMemorySwapping(void)
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 912              		.loc 1 554 1 is_stmt 1 view -0
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 0
 915              		@ frame_needed = 0, uses_anonymous_args = 0
 916              		@ link register save eliminated.
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->MEMRMP |= SYSCFG_MEMRMP_SWP_FMC_0;
 917              		.loc 1 555 3 view .LVU150
 918              		.loc 1 555 18 is_stmt 0 view .LVU151
 919 0000 024A     		ldr	r2, .L87
 920 0002 1368     		ldr	r3, [r2]
 921 0004 43F48063 		orr	r3, r3, #1024
 922 0008 1360     		str	r3, [r2]
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 923              		.loc 1 556 1 view .LVU152
 924 000a 7047     		bx	lr
 925              	.L88:
 926              		.align	2
 927              	.L87:
 928 000c 00380140 		.word	1073821696
 929              		.cfi_endproc
 930              	.LFE168:
 932              		.section	.text.HAL_DisableFMCMemorySwapping,"ax",%progbits
 933              		.align	1
 934              		.global	HAL_DisableFMCMemorySwapping
 935              		.syntax unified
 936              		.thumb
 937              		.thumb_func
 939              	HAL_DisableFMCMemorySwapping:
 940              	.LFB169:
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disables the FMC Memory Mapping Swapping
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   
ARM GAS  /tmp/cc5ih7xu.s 			page 27


 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SDRAM is accessible at 0xC0000000 (default mapping)  
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         and NOR/RAM is accessible at 0x60000000 (default mapping)    
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableFMCMemorySwapping(void)
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 941              		.loc 1 567 1 is_stmt 1 view -0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 0
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 945              		@ link register save eliminated.
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->MEMRMP &= (uint32_t)~((uint32_t)SYSCFG_MEMRMP_SWP_FMC);
 946              		.loc 1 568 3 view .LVU154
 947              		.loc 1 568 18 is_stmt 0 view .LVU155
 948 0000 024A     		ldr	r2, .L90
 949 0002 1368     		ldr	r3, [r2]
 950 0004 23F44063 		bic	r3, r3, #3072
 951 0008 1360     		str	r3, [r2]
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 952              		.loc 1 569 1 view .LVU156
 953 000a 7047     		bx	lr
 954              	.L91:
 955              		.align	2
 956              	.L90:
 957 000c 00380140 		.word	1073821696
 958              		.cfi_endproc
 959              	.LFE169:
 961              		.section	.text.HAL_EnableMemorySwappingBank,"ax",%progbits
 962              		.align	1
 963              		.global	HAL_EnableMemorySwappingBank
 964              		.syntax unified
 965              		.thumb
 966              		.thumb_func
 968              	HAL_EnableMemorySwappingBank:
 969              	.LFB170:
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if defined (STM32F765xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @brief  Enable the Internal FLASH Bank Swapping.
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *   
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @note   This function can be used only for STM32F77xx/STM32F76xx devices. 
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @note   Flash Bank2 mapped at 0x08000000 (AXI) (aliased at 0x00200000 (TCM)) 
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *         and Flash Bank1 mapped at 0x08100000 (AXI) (aliased at 0x00300000 (TCM))   
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @retval None
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** */
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableMemorySwappingBank(void)
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 970              		.loc 1 583 1 is_stmt 1 view -0
 971              		.cfi_startproc
 972              		@ args = 0, pretend = 0, frame = 0
 973              		@ frame_needed = 0, uses_anonymous_args = 0
 974              		@ link register save eliminated.
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(SYSCFG->MEMRMP, SYSCFG_MEMRMP_SWP_FB);
 975              		.loc 1 584 3 view .LVU158
ARM GAS  /tmp/cc5ih7xu.s 			page 28


 976 0000 024A     		ldr	r2, .L93
 977 0002 1368     		ldr	r3, [r2]
 978 0004 43F48073 		orr	r3, r3, #256
 979 0008 1360     		str	r3, [r2]
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 980              		.loc 1 585 1 is_stmt 0 view .LVU159
 981 000a 7047     		bx	lr
 982              	.L94:
 983              		.align	2
 984              	.L93:
 985 000c 00380140 		.word	1073821696
 986              		.cfi_endproc
 987              	.LFE170:
 989              		.section	.text.HAL_DisableMemorySwappingBank,"ax",%progbits
 990              		.align	1
 991              		.global	HAL_DisableMemorySwappingBank
 992              		.syntax unified
 993              		.thumb
 994              		.thumb_func
 996              	HAL_DisableMemorySwappingBank:
 997              	.LFB171:
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @brief  Disable the Internal FLASH Bank Swapping.
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *   
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @note   This function can be used only for STM32F77xx/STM32F76xx devices. 
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @note   The default state : Flash Bank1 mapped at 0x08000000 (AXI) (aliased at 0x00200000 (TCM)) 
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *         and Flash Bank2 mapped at 0x08100000 (AXI)( aliased at 0x00300000 (TCM)) 
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *           
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @retval None
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** */
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableMemorySwappingBank(void)
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 998              		.loc 1 598 1 is_stmt 1 view -0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 0
 1001              		@ frame_needed = 0, uses_anonymous_args = 0
 1002              		@ link register save eliminated.
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(SYSCFG->MEMRMP, SYSCFG_MEMRMP_SWP_FB);
 1003              		.loc 1 599 3 view .LVU161
 1004 0000 024A     		ldr	r2, .L96
 1005 0002 1368     		ldr	r3, [r2]
 1006 0004 23F48073 		bic	r3, r3, #256
 1007 0008 1360     		str	r3, [r2]
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 1008              		.loc 1 600 1 is_stmt 0 view .LVU162
 1009 000a 7047     		bx	lr
 1010              	.L97:
 1011              		.align	2
 1012              	.L96:
 1013 000c 00380140 		.word	1073821696
 1014              		.cfi_endproc
 1015              	.LFE171:
 1017              		.global	uwTickFreq
 1018              		.global	uwTickPrio
 1019              		.global	uwTick
ARM GAS  /tmp/cc5ih7xu.s 			page 29


 1020              		.section	.bss.uwTick,"aw",%nobits
 1021              		.align	2
 1022              		.set	.LANCHOR2,. + 0
 1025              	uwTick:
 1026 0000 00000000 		.space	4
 1027              		.section	.data.uwTickFreq,"aw"
 1028              		.set	.LANCHOR0,. + 0
 1031              	uwTickFreq:
 1032 0000 01       		.byte	1
 1033              		.section	.data.uwTickPrio,"aw"
 1034              		.align	2
 1035              		.set	.LANCHOR1,. + 0
 1038              	uwTickPrio:
 1039 0000 10000000 		.word	16
 1040              		.text
 1041              	.Letext0:
 1042              		.file 2 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 1043              		.file 3 "/home/romet/st/stm32cubeide_1.13.2_2/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-t
 1044              		.file 4 "/home/romet/st/stm32cubeide_1.13.2_2/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-t
 1045              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 1046              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1047              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1048              		.file 8 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1049              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
ARM GAS  /tmp/cc5ih7xu.s 			page 30


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal.c
     /tmp/cc5ih7xu.s:19     .text.HAL_MspInit:0000000000000000 $t
     /tmp/cc5ih7xu.s:25     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/cc5ih7xu.s:39     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/cc5ih7xu.s:45     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/cc5ih7xu.s:58     .text.HAL_DeInit:0000000000000000 $t
     /tmp/cc5ih7xu.s:64     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/cc5ih7xu.s:108    .text.HAL_DeInit:0000000000000028 $d
     /tmp/cc5ih7xu.s:113    .text.HAL_InitTick:0000000000000000 $t
     /tmp/cc5ih7xu.s:119    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/cc5ih7xu.s:182    .text.HAL_InitTick:0000000000000040 $d
     /tmp/cc5ih7xu.s:189    .text.HAL_Init:0000000000000000 $t
     /tmp/cc5ih7xu.s:195    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/cc5ih7xu.s:225    .text.HAL_IncTick:0000000000000000 $t
     /tmp/cc5ih7xu.s:231    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/cc5ih7xu.s:251    .text.HAL_IncTick:0000000000000010 $d
     /tmp/cc5ih7xu.s:257    .text.HAL_GetTick:0000000000000000 $t
     /tmp/cc5ih7xu.s:263    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/cc5ih7xu.s:279    .text.HAL_GetTick:0000000000000008 $d
     /tmp/cc5ih7xu.s:284    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/cc5ih7xu.s:290    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/cc5ih7xu.s:305    .text.HAL_GetTickPrio:0000000000000008 $d
     /tmp/cc5ih7xu.s:310    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/cc5ih7xu.s:316    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/cc5ih7xu.s:373    .text.HAL_SetTickFreq:0000000000000024 $d
     /tmp/cc5ih7xu.s:379    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/cc5ih7xu.s:385    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/cc5ih7xu.s:400    .text.HAL_GetTickFreq:0000000000000008 $d
     /tmp/cc5ih7xu.s:405    .text.HAL_Delay:0000000000000000 $t
     /tmp/cc5ih7xu.s:411    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/cc5ih7xu.s:464    .text.HAL_Delay:0000000000000024 $d
     /tmp/cc5ih7xu.s:469    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/cc5ih7xu.s:475    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/cc5ih7xu.s:494    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/cc5ih7xu.s:500    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/cc5ih7xu.s:519    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/cc5ih7xu.s:525    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/cc5ih7xu.s:539    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/cc5ih7xu.s:544    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/cc5ih7xu.s:550    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/cc5ih7xu.s:567    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/cc5ih7xu.s:572    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/cc5ih7xu.s:578    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/cc5ih7xu.s:595    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/cc5ih7xu.s:600    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/cc5ih7xu.s:606    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/cc5ih7xu.s:621    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/cc5ih7xu.s:626    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/cc5ih7xu.s:632    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/cc5ih7xu.s:647    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/cc5ih7xu.s:652    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/cc5ih7xu.s:658    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
     /tmp/cc5ih7xu.s:673    .text.HAL_GetUIDw2:0000000000000008 $d
     /tmp/cc5ih7xu.s:678    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/cc5ih7xu.s:684    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/cc5ih7xu.s:701    .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
ARM GAS  /tmp/cc5ih7xu.s 			page 31


     /tmp/cc5ih7xu.s:706    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/cc5ih7xu.s:712    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/cc5ih7xu.s:729    .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/cc5ih7xu.s:734    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/cc5ih7xu.s:740    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/cc5ih7xu.s:757    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/cc5ih7xu.s:762    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/cc5ih7xu.s:768    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/cc5ih7xu.s:785    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/cc5ih7xu.s:790    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/cc5ih7xu.s:796    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/cc5ih7xu.s:813    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/cc5ih7xu.s:818    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/cc5ih7xu.s:824    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/cc5ih7xu.s:841    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/cc5ih7xu.s:846    .text.HAL_EnableCompensationCell:0000000000000000 $t
     /tmp/cc5ih7xu.s:852    .text.HAL_EnableCompensationCell:0000000000000000 HAL_EnableCompensationCell
     /tmp/cc5ih7xu.s:870    .text.HAL_EnableCompensationCell:000000000000000c $d
     /tmp/cc5ih7xu.s:875    .text.HAL_DisableCompensationCell:0000000000000000 $t
     /tmp/cc5ih7xu.s:881    .text.HAL_DisableCompensationCell:0000000000000000 HAL_DisableCompensationCell
     /tmp/cc5ih7xu.s:899    .text.HAL_DisableCompensationCell:000000000000000c $d
     /tmp/cc5ih7xu.s:904    .text.HAL_EnableFMCMemorySwapping:0000000000000000 $t
     /tmp/cc5ih7xu.s:910    .text.HAL_EnableFMCMemorySwapping:0000000000000000 HAL_EnableFMCMemorySwapping
     /tmp/cc5ih7xu.s:928    .text.HAL_EnableFMCMemorySwapping:000000000000000c $d
     /tmp/cc5ih7xu.s:933    .text.HAL_DisableFMCMemorySwapping:0000000000000000 $t
     /tmp/cc5ih7xu.s:939    .text.HAL_DisableFMCMemorySwapping:0000000000000000 HAL_DisableFMCMemorySwapping
     /tmp/cc5ih7xu.s:957    .text.HAL_DisableFMCMemorySwapping:000000000000000c $d
     /tmp/cc5ih7xu.s:962    .text.HAL_EnableMemorySwappingBank:0000000000000000 $t
     /tmp/cc5ih7xu.s:968    .text.HAL_EnableMemorySwappingBank:0000000000000000 HAL_EnableMemorySwappingBank
     /tmp/cc5ih7xu.s:985    .text.HAL_EnableMemorySwappingBank:000000000000000c $d
     /tmp/cc5ih7xu.s:990    .text.HAL_DisableMemorySwappingBank:0000000000000000 $t
     /tmp/cc5ih7xu.s:996    .text.HAL_DisableMemorySwappingBank:0000000000000000 HAL_DisableMemorySwappingBank
     /tmp/cc5ih7xu.s:1013   .text.HAL_DisableMemorySwappingBank:000000000000000c $d
     /tmp/cc5ih7xu.s:1031   .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/cc5ih7xu.s:1038   .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/cc5ih7xu.s:1025   .bss.uwTick:0000000000000000 uwTick
     /tmp/cc5ih7xu.s:1021   .bss.uwTick:0000000000000000 $d
     /tmp/cc5ih7xu.s:1034   .data.uwTickPrio:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
