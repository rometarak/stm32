ARM GAS  /tmp/ccZTzL3y.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32f7xx_it.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB141:
  27              		.file 1 "Core/Src/stm32f7xx_it.c"
   1:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f7xx_it.c **** /**
   3:Core/Src/stm32f7xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f7xx_it.c ****   * @file    stm32f7xx_it.c
   5:Core/Src/stm32f7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f7xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f7xx_it.c ****   * @attention
   8:Core/Src/stm32f7xx_it.c ****   *
   9:Core/Src/stm32f7xx_it.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/stm32f7xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f7xx_it.c ****   *
  12:Core/Src/stm32f7xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f7xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f7xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f7xx_it.c ****   *
  16:Core/Src/stm32f7xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f7xx_it.c ****   */
  18:Core/Src/stm32f7xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f7xx_it.c **** 
  20:Core/Src/stm32f7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f7xx_it.c **** #include "main.h"
  22:Core/Src/stm32f7xx_it.c **** #include "stm32f7xx_it.h"
  23:Core/Src/stm32f7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f7xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f7xx_it.c **** 
  27:Core/Src/stm32f7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f7xx_it.c **** 
  30:Core/Src/stm32f7xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32f7xx_it.c **** 
ARM GAS  /tmp/ccZTzL3y.s 			page 2


  32:Core/Src/stm32f7xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f7xx_it.c **** 
  35:Core/Src/stm32f7xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f7xx_it.c **** 
  37:Core/Src/stm32f7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f7xx_it.c **** 
  40:Core/Src/stm32f7xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f7xx_it.c **** 
  42:Core/Src/stm32f7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f7xx_it.c **** 
  45:Core/Src/stm32f7xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f7xx_it.c **** 
  47:Core/Src/stm32f7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f7xx_it.c **** 
  50:Core/Src/stm32f7xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f7xx_it.c **** 
  52:Core/Src/stm32f7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f7xx_it.c **** 
  55:Core/Src/stm32f7xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f7xx_it.c **** 
  57:Core/Src/stm32f7xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f7xx_it.c **** extern DMA_HandleTypeDef hdma_usart3_rx;
  59:Core/Src/stm32f7xx_it.c **** extern DMA_HandleTypeDef hdma_usart3_tx;
  60:Core/Src/stm32f7xx_it.c **** extern UART_HandleTypeDef huart3;
  61:Core/Src/stm32f7xx_it.c **** extern TIM_HandleTypeDef htim1;
  62:Core/Src/stm32f7xx_it.c **** 
  63:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN EV */
  64:Core/Src/stm32f7xx_it.c **** 
  65:Core/Src/stm32f7xx_it.c **** /* USER CODE END EV */
  66:Core/Src/stm32f7xx_it.c **** 
  67:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
  68:Core/Src/stm32f7xx_it.c **** /*           Cortex-M7 Processor Interruption and Exception Handlers          */
  69:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
  70:Core/Src/stm32f7xx_it.c **** /**
  71:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  72:Core/Src/stm32f7xx_it.c ****   */
  73:Core/Src/stm32f7xx_it.c **** void NMI_Handler(void)
  74:Core/Src/stm32f7xx_it.c **** {
  28              		.loc 1 74 1 view -0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
  75:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  76:Core/Src/stm32f7xx_it.c **** 
  77:Core/Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  78:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  79:Core/Src/stm32f7xx_it.c ****   while (1)
  35              		.loc 1 79 3 discriminator 1 view .LVU1
  80:Core/Src/stm32f7xx_it.c ****   {
ARM GAS  /tmp/ccZTzL3y.s 			page 3


  81:Core/Src/stm32f7xx_it.c ****   }
  36              		.loc 1 81 3 discriminator 1 view .LVU2
  79:Core/Src/stm32f7xx_it.c ****   {
  37              		.loc 1 79 9 discriminator 1 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE141:
  42              		.section	.text.HardFault_Handler,"ax",%progbits
  43              		.align	1
  44              		.global	HardFault_Handler
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  49              	HardFault_Handler:
  50              	.LFB142:
  82:Core/Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  83:Core/Src/stm32f7xx_it.c **** }
  84:Core/Src/stm32f7xx_it.c **** 
  85:Core/Src/stm32f7xx_it.c **** /**
  86:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  87:Core/Src/stm32f7xx_it.c ****   */
  88:Core/Src/stm32f7xx_it.c **** void HardFault_Handler(void)
  89:Core/Src/stm32f7xx_it.c **** {
  51              		.loc 1 89 1 view -0
  52              		.cfi_startproc
  53              		@ Volatile: function does not return.
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.L4:
  90:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  91:Core/Src/stm32f7xx_it.c **** 
  92:Core/Src/stm32f7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  93:Core/Src/stm32f7xx_it.c ****   while (1)
  58              		.loc 1 93 3 discriminator 1 view .LVU5
  94:Core/Src/stm32f7xx_it.c ****   {
  95:Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  96:Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  97:Core/Src/stm32f7xx_it.c ****   }
  59              		.loc 1 97 3 discriminator 1 view .LVU6
  93:Core/Src/stm32f7xx_it.c ****   {
  60              		.loc 1 93 9 discriminator 1 view .LVU7
  61 0000 FEE7     		b	.L4
  62              		.cfi_endproc
  63              	.LFE142:
  65              		.section	.text.MemManage_Handler,"ax",%progbits
  66              		.align	1
  67              		.global	MemManage_Handler
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  72              	MemManage_Handler:
  73              	.LFB143:
  98:Core/Src/stm32f7xx_it.c **** }
  99:Core/Src/stm32f7xx_it.c **** 
 100:Core/Src/stm32f7xx_it.c **** /**
 101:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Memory management fault.
ARM GAS  /tmp/ccZTzL3y.s 			page 4


 102:Core/Src/stm32f7xx_it.c ****   */
 103:Core/Src/stm32f7xx_it.c **** void MemManage_Handler(void)
 104:Core/Src/stm32f7xx_it.c **** {
  74              		.loc 1 104 1 view -0
  75              		.cfi_startproc
  76              		@ Volatile: function does not return.
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  80              	.L6:
 105:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 106:Core/Src/stm32f7xx_it.c **** 
 107:Core/Src/stm32f7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 108:Core/Src/stm32f7xx_it.c ****   while (1)
  81              		.loc 1 108 3 discriminator 1 view .LVU9
 109:Core/Src/stm32f7xx_it.c ****   {
 110:Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 111:Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f7xx_it.c ****   }
  82              		.loc 1 112 3 discriminator 1 view .LVU10
 108:Core/Src/stm32f7xx_it.c ****   {
  83              		.loc 1 108 9 discriminator 1 view .LVU11
  84 0000 FEE7     		b	.L6
  85              		.cfi_endproc
  86              	.LFE143:
  88              		.section	.text.BusFault_Handler,"ax",%progbits
  89              		.align	1
  90              		.global	BusFault_Handler
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  95              	BusFault_Handler:
  96              	.LFB144:
 113:Core/Src/stm32f7xx_it.c **** }
 114:Core/Src/stm32f7xx_it.c **** 
 115:Core/Src/stm32f7xx_it.c **** /**
 116:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 117:Core/Src/stm32f7xx_it.c ****   */
 118:Core/Src/stm32f7xx_it.c **** void BusFault_Handler(void)
 119:Core/Src/stm32f7xx_it.c **** {
  97              		.loc 1 119 1 view -0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L8:
 120:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 121:Core/Src/stm32f7xx_it.c **** 
 122:Core/Src/stm32f7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 123:Core/Src/stm32f7xx_it.c ****   while (1)
 104              		.loc 1 123 3 discriminator 1 view .LVU13
 124:Core/Src/stm32f7xx_it.c ****   {
 125:Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 126:Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 127:Core/Src/stm32f7xx_it.c ****   }
 105              		.loc 1 127 3 discriminator 1 view .LVU14
ARM GAS  /tmp/ccZTzL3y.s 			page 5


 123:Core/Src/stm32f7xx_it.c ****   {
 106              		.loc 1 123 9 discriminator 1 view .LVU15
 107 0000 FEE7     		b	.L8
 108              		.cfi_endproc
 109              	.LFE144:
 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 118              	UsageFault_Handler:
 119              	.LFB145:
 128:Core/Src/stm32f7xx_it.c **** }
 129:Core/Src/stm32f7xx_it.c **** 
 130:Core/Src/stm32f7xx_it.c **** /**
 131:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 132:Core/Src/stm32f7xx_it.c ****   */
 133:Core/Src/stm32f7xx_it.c **** void UsageFault_Handler(void)
 134:Core/Src/stm32f7xx_it.c **** {
 120              		.loc 1 134 1 view -0
 121              		.cfi_startproc
 122              		@ Volatile: function does not return.
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126              	.L10:
 135:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 136:Core/Src/stm32f7xx_it.c **** 
 137:Core/Src/stm32f7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 138:Core/Src/stm32f7xx_it.c ****   while (1)
 127              		.loc 1 138 3 discriminator 1 view .LVU17
 139:Core/Src/stm32f7xx_it.c ****   {
 140:Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 141:Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 142:Core/Src/stm32f7xx_it.c ****   }
 128              		.loc 1 142 3 discriminator 1 view .LVU18
 138:Core/Src/stm32f7xx_it.c ****   {
 129              		.loc 1 138 9 discriminator 1 view .LVU19
 130 0000 FEE7     		b	.L10
 131              		.cfi_endproc
 132              	.LFE145:
 134              		.section	.text.DebugMon_Handler,"ax",%progbits
 135              		.align	1
 136              		.global	DebugMon_Handler
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 141              	DebugMon_Handler:
 142              	.LFB146:
 143:Core/Src/stm32f7xx_it.c **** }
 144:Core/Src/stm32f7xx_it.c **** 
 145:Core/Src/stm32f7xx_it.c **** /**
 146:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Debug monitor.
 147:Core/Src/stm32f7xx_it.c ****   */
 148:Core/Src/stm32f7xx_it.c **** void DebugMon_Handler(void)
 149:Core/Src/stm32f7xx_it.c **** {
ARM GAS  /tmp/ccZTzL3y.s 			page 6


 143              		.loc 1 149 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 150:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 151:Core/Src/stm32f7xx_it.c **** 
 152:Core/Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 153:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 154:Core/Src/stm32f7xx_it.c **** 
 155:Core/Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 156:Core/Src/stm32f7xx_it.c **** }
 148              		.loc 1 156 1 view .LVU21
 149 0000 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE146:
 153              		.section	.text.DMA1_Stream1_IRQHandler,"ax",%progbits
 154              		.align	1
 155              		.global	DMA1_Stream1_IRQHandler
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 160              	DMA1_Stream1_IRQHandler:
 161              	.LFB147:
 157:Core/Src/stm32f7xx_it.c **** 
 158:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
 159:Core/Src/stm32f7xx_it.c **** /* STM32F7xx Peripheral Interrupt Handlers                                    */
 160:Core/Src/stm32f7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 161:Core/Src/stm32f7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 162:Core/Src/stm32f7xx_it.c **** /* please refer to the startup file (startup_stm32f7xx.s).                    */
 163:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
 164:Core/Src/stm32f7xx_it.c **** 
 165:Core/Src/stm32f7xx_it.c **** /**
 166:Core/Src/stm32f7xx_it.c ****   * @brief This function handles DMA1 stream1 global interrupt.
 167:Core/Src/stm32f7xx_it.c ****   */
 168:Core/Src/stm32f7xx_it.c **** void DMA1_Stream1_IRQHandler(void)
 169:Core/Src/stm32f7xx_it.c **** {
 162              		.loc 1 169 1 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166 0000 08B5     		push	{r3, lr}
 167              	.LCFI0:
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 3, -8
 170              		.cfi_offset 14, -4
 170:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */
 171:Core/Src/stm32f7xx_it.c **** 
 172:Core/Src/stm32f7xx_it.c ****   /* USER CODE END DMA1_Stream1_IRQn 0 */
 173:Core/Src/stm32f7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart3_rx);
 171              		.loc 1 173 3 view .LVU23
 172 0002 0248     		ldr	r0, .L14
 173 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 174              	.LVL0:
 174:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream1_IRQn 1 */
 175:Core/Src/stm32f7xx_it.c **** 
 176:Core/Src/stm32f7xx_it.c ****   /* USER CODE END DMA1_Stream1_IRQn 1 */
ARM GAS  /tmp/ccZTzL3y.s 			page 7


 177:Core/Src/stm32f7xx_it.c **** }
 175              		.loc 1 177 1 is_stmt 0 view .LVU24
 176 0008 08BD     		pop	{r3, pc}
 177              	.L15:
 178 000a 00BF     		.align	2
 179              	.L14:
 180 000c 00000000 		.word	hdma_usart3_rx
 181              		.cfi_endproc
 182              	.LFE147:
 184              		.section	.text.DMA1_Stream3_IRQHandler,"ax",%progbits
 185              		.align	1
 186              		.global	DMA1_Stream3_IRQHandler
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 191              	DMA1_Stream3_IRQHandler:
 192              	.LFB148:
 178:Core/Src/stm32f7xx_it.c **** 
 179:Core/Src/stm32f7xx_it.c **** /**
 180:Core/Src/stm32f7xx_it.c ****   * @brief This function handles DMA1 stream3 global interrupt.
 181:Core/Src/stm32f7xx_it.c ****   */
 182:Core/Src/stm32f7xx_it.c **** void DMA1_Stream3_IRQHandler(void)
 183:Core/Src/stm32f7xx_it.c **** {
 193              		.loc 1 183 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 08B5     		push	{r3, lr}
 198              	.LCFI1:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 3, -8
 201              		.cfi_offset 14, -4
 184:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream3_IRQn 0 */
 185:Core/Src/stm32f7xx_it.c **** 
 186:Core/Src/stm32f7xx_it.c ****   /* USER CODE END DMA1_Stream3_IRQn 0 */
 187:Core/Src/stm32f7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart3_tx);
 202              		.loc 1 187 3 view .LVU26
 203 0002 0248     		ldr	r0, .L18
 204 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 205              	.LVL1:
 188:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream3_IRQn 1 */
 189:Core/Src/stm32f7xx_it.c **** 
 190:Core/Src/stm32f7xx_it.c ****   /* USER CODE END DMA1_Stream3_IRQn 1 */
 191:Core/Src/stm32f7xx_it.c **** }
 206              		.loc 1 191 1 is_stmt 0 view .LVU27
 207 0008 08BD     		pop	{r3, pc}
 208              	.L19:
 209 000a 00BF     		.align	2
 210              	.L18:
 211 000c 00000000 		.word	hdma_usart3_tx
 212              		.cfi_endproc
 213              	.LFE148:
 215              		.section	.text.TIM1_UP_TIM10_IRQHandler,"ax",%progbits
 216              		.align	1
 217              		.global	TIM1_UP_TIM10_IRQHandler
 218              		.syntax unified
 219              		.thumb
ARM GAS  /tmp/ccZTzL3y.s 			page 8


 220              		.thumb_func
 222              	TIM1_UP_TIM10_IRQHandler:
 223              	.LFB149:
 192:Core/Src/stm32f7xx_it.c **** 
 193:Core/Src/stm32f7xx_it.c **** /**
 194:Core/Src/stm32f7xx_it.c ****   * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
 195:Core/Src/stm32f7xx_it.c ****   */
 196:Core/Src/stm32f7xx_it.c **** void TIM1_UP_TIM10_IRQHandler(void)
 197:Core/Src/stm32f7xx_it.c **** {
 224              		.loc 1 197 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228 0000 08B5     		push	{r3, lr}
 229              	.LCFI2:
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 3, -8
 232              		.cfi_offset 14, -4
 198:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */
 199:Core/Src/stm32f7xx_it.c **** 
 200:Core/Src/stm32f7xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
 201:Core/Src/stm32f7xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 233              		.loc 1 201 3 view .LVU29
 234 0002 0248     		ldr	r0, .L22
 235 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 236              	.LVL2:
 202:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */
 203:Core/Src/stm32f7xx_it.c **** 
 204:Core/Src/stm32f7xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
 205:Core/Src/stm32f7xx_it.c **** }
 237              		.loc 1 205 1 is_stmt 0 view .LVU30
 238 0008 08BD     		pop	{r3, pc}
 239              	.L23:
 240 000a 00BF     		.align	2
 241              	.L22:
 242 000c 00000000 		.word	htim1
 243              		.cfi_endproc
 244              	.LFE149:
 246              		.section	.text.USART3_IRQHandler,"ax",%progbits
 247              		.align	1
 248              		.global	USART3_IRQHandler
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	USART3_IRQHandler:
 254              	.LFB150:
 206:Core/Src/stm32f7xx_it.c **** 
 207:Core/Src/stm32f7xx_it.c **** /**
 208:Core/Src/stm32f7xx_it.c ****   * @brief This function handles USART3 global interrupt.
 209:Core/Src/stm32f7xx_it.c ****   */
 210:Core/Src/stm32f7xx_it.c **** void USART3_IRQHandler(void)
 211:Core/Src/stm32f7xx_it.c **** {
 255              		.loc 1 211 1 is_stmt 1 view -0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccZTzL3y.s 			page 9


 260              	.LCFI3:
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 3, -8
 263              		.cfi_offset 14, -4
 212:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 0 */
 213:Core/Src/stm32f7xx_it.c **** 
 214:Core/Src/stm32f7xx_it.c ****   /* USER CODE END USART3_IRQn 0 */
 215:Core/Src/stm32f7xx_it.c ****   HAL_UART_IRQHandler(&huart3);
 264              		.loc 1 215 3 view .LVU32
 265 0002 0248     		ldr	r0, .L26
 266 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 267              	.LVL3:
 216:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 1 */
 217:Core/Src/stm32f7xx_it.c **** 
 218:Core/Src/stm32f7xx_it.c ****   /* USER CODE END USART3_IRQn 1 */
 219:Core/Src/stm32f7xx_it.c **** }
 268              		.loc 1 219 1 is_stmt 0 view .LVU33
 269 0008 08BD     		pop	{r3, pc}
 270              	.L27:
 271 000a 00BF     		.align	2
 272              	.L26:
 273 000c 00000000 		.word	huart3
 274              		.cfi_endproc
 275              	.LFE150:
 277              		.text
 278              	.Letext0:
 279              		.file 2 "/home/romet/st/stm32cubeide_1.13.2_2/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-t
 280              		.file 3 "/home/romet/st/stm32cubeide_1.13.2_2/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-t
 281              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 282              		.file 5 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 283              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 284              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 285              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
ARM GAS  /tmp/ccZTzL3y.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_it.c
     /tmp/ccZTzL3y.s:19     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccZTzL3y.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccZTzL3y.s:43     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccZTzL3y.s:49     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccZTzL3y.s:66     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccZTzL3y.s:72     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccZTzL3y.s:89     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccZTzL3y.s:95     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccZTzL3y.s:112    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccZTzL3y.s:118    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccZTzL3y.s:135    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccZTzL3y.s:141    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccZTzL3y.s:154    .text.DMA1_Stream1_IRQHandler:0000000000000000 $t
     /tmp/ccZTzL3y.s:160    .text.DMA1_Stream1_IRQHandler:0000000000000000 DMA1_Stream1_IRQHandler
     /tmp/ccZTzL3y.s:180    .text.DMA1_Stream1_IRQHandler:000000000000000c $d
     /tmp/ccZTzL3y.s:185    .text.DMA1_Stream3_IRQHandler:0000000000000000 $t
     /tmp/ccZTzL3y.s:191    .text.DMA1_Stream3_IRQHandler:0000000000000000 DMA1_Stream3_IRQHandler
     /tmp/ccZTzL3y.s:211    .text.DMA1_Stream3_IRQHandler:000000000000000c $d
     /tmp/ccZTzL3y.s:216    .text.TIM1_UP_TIM10_IRQHandler:0000000000000000 $t
     /tmp/ccZTzL3y.s:222    .text.TIM1_UP_TIM10_IRQHandler:0000000000000000 TIM1_UP_TIM10_IRQHandler
     /tmp/ccZTzL3y.s:242    .text.TIM1_UP_TIM10_IRQHandler:000000000000000c $d
     /tmp/ccZTzL3y.s:247    .text.USART3_IRQHandler:0000000000000000 $t
     /tmp/ccZTzL3y.s:253    .text.USART3_IRQHandler:0000000000000000 USART3_IRQHandler
     /tmp/ccZTzL3y.s:273    .text.USART3_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_DMA_IRQHandler
hdma_usart3_rx
hdma_usart3_tx
HAL_TIM_IRQHandler
htim1
HAL_UART_IRQHandler
huart3
